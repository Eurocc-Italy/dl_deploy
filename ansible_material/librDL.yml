---
# This playbook sets up a Datalake service on CentOS 8 with MongoDB, boto libraries and others necessary for the connexion-flask api.
- name: Setup Datalake service
  hosts: my_vm
  become: yes
  gather_facts: yes
  tasks:
    - name: Install Python 3.9
      dnf:
        name: python39
        state: present

    - name: Set Python 3.9 as the alternative for python3
      alternatives:
        name: python3
        link: /usr/bin/python3
        path: /usr/bin/python3.9

    - name: Create a virtual environment
      command: python3.9 -m venv /home/centos/api_env
      args:
        creates: /home/centos/api_env
          
    - name: Check if MongoDB is installed
      shell: "rpm -q mongodb-org"
      ignore_errors: true
      register: mongodb_installed

    - name: Add MongoDB Repository
      become: yes
      copy:
        dest: /etc/yum.repos.d/mongodb-org-4.4.repo
        content: |
          [mongodb-org-4.4]
          name=MongoDB Repository
          baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/
          gpgcheck=1
          enabled=1
          gpgkey=https://www.mongodb.org/static/pgp/server-4.4.asc
      when: mongodb_installed.rc != 0

    - name: Install MongoDB
      dnf:
        name: mongodb-org
        state: present
      when: mongodb_installed.rc != 0

    - name: Check if boto is installed
      shell: "pip3 list | grep boto"
      ignore_errors: true
      register: boto_installed

    - name: Install boto libraries
      pip:
        name:
          - boto
          - boto3
        executable: pip3
      when: boto_installed.rc != 0

    - name: Copy requirements.txt to remote
      copy:
        src: /home/centos/ansible_material/datalake_api/requirements_api.txt
        dest: /tmp/requirements_api.txt

    - name: Install requirements into the virtual environment
      pip:
        requirements: /tmp/requirements_api.txt
        virtualenv: /home/centos/api_env
        virtualenv_command: /home/centos/api_env/bin/python3 -m venv

    - name: Install the latest version of Git
      dnf:
        name: git
        state: latest

    - name: Ensure community.mongodb is installed
      ansible.builtin.pip:
        name: pymongo
        state: present

    - name: Install MongoDB community modules
      delegate_to: localhost
      run_once: true
      command: "/home/centos/test/bin/ansible-galaxy collection install community.mongodb"
   
    - name: Change bindIp in mongod.conf
      become: yes
      lineinfile:
        path: /etc/mongod.conf
        regexp: '^  bindIp: 127.0.0.1'
        line: '  bindIp: 0.0.0.0'
        backrefs: yes 
    
    - name: Create MongoDB user
      delegate_to: my_vm
      community.mongodb.mongodb_user:
        database: "admin"
        name: "user"
        password: "passwd"
        roles:
          - db: "metadata"
            role: "readWrite"
        state: present

  handlers:
    - name: restart mongod on localhost
      become: yes
      service:
        name: mongod 
        state: restarted
      delegate_to: localhost
